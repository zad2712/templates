# Backend configuration for AWS Terraform state storage
# Author: Diego A. Zarate
# Environment: User Acceptance Testing
# Layer: Networking

# S3 bucket for storing Terraform state files
bucket = "terraform-state-aws-infra-uat"

# Key path for this layer's state file in the S3 bucket
key = "layers/networking/uat/terraform.tfstate"

# AWS region where the S3 bucket is located
region = "us-east-1"

# DynamoDB table for state locking to prevent concurrent modifications
dynamodb_table = "terraform-state-lock-aws-infra-uat"

# Enable encryption of the state file in S3
encrypt = true

# KMS key ID for state file encryption (optional, uses default if not specified)
# kms_key_id = "arn:aws:kms:us-east-1:ACCOUNT_ID:key/KEY_ID"

# Workspace key prefix for multiple workspaces (optional)
workspace_key_prefix = "workspaces"

# Server-side encryption configuration
server_side_encryption_configuration {
  rule {
    apply_server_side_encryption_by_default {
      sse_algorithm = "AES256"
    }
  }
}

# Additional security settings
versioning {
  enabled = true
}

# Lifecycle configuration for cost optimization
lifecycle_configuration {
  rule {
    id      = "terraform_state_lifecycle"
    enabled = true
    
    noncurrent_version_expiration {
      days = 180
    }
    
    abort_incomplete_multipart_upload {
      days_after_initiation = 7
    }
  }
}